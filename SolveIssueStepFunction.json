{
  "Comment": "Solving an Issue (PI)",
  "StartAt": "Do The Code",
  "States": {
    "Do The Code": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-1:010285592474:function:sendHttpRequest:$LATEST",
        "Payload": {
          "verb": "POST",
          "path.$": "$.path",
          "data": {
            "Action": "Do the code",
            "code.$": "$.code" 
          }
        }
      },
      "ResultPath": "$.Code",
      "Next": "Create the Branch"
    },
    "Create the Branch": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-1:010285592474:function:sendHttpRequest:$LATEST",
        "Payload": {
          "verb": "POST",
          "path.$": "$.path",
          "data": {
            "action.$": "$$.State.Name",
            "branch": "PAYPAL-666" 
          }
        }
      },
      "ResultPath": "$.Branch",
      "Next": "Notify Reviewers"
    },
    "Notify Reviewers": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
        "Parameters": {
          "FunctionName": "arn:aws:lambda:us-east-1:010285592474:function:requiresApproval",
          "Payload": {
            "Action.$": "$$.State.Name",
            "ExecutionContext.$": "$$",
            "Event.$": "$",
            "Branch.$": "$.Branch.Payload.result.branch"
          }
        },
        "ResultPath": "$.Status",
        "Next": "Get Some Approvals"
    },
    "Get Some Approvals": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Status",
          "StringEquals": "Approved!",
          "Next": "Merge to Master"
        },
        {
          "Variable": "$.Status",
          "StringEquals": "Rejected!",
          "Next": "TryAgain"
        }
      ]
    },
    "Merge to Master": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-1:010285592474:function:sendHttpRequest:$LATEST",
        "Payload": {
          "verb": "POST",
          "path.$": "$.path",
          "data": {
            "action.$": "$$.State.Name",
            "Branch.$": "$.Branch.Payload.result.branch"
          }
        }
      },
      "ResultPath": "$.Merge",
      "Next": "Create release"
    },
    "Create release": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-1:010285592474:function:sendHttpRequest:$LATEST",
        "Payload": {
          "verb": "POST",
          "path.$": "$.path",
          "data": {
            "action.$": "$$.State.Name",
            "release": "1.1.0"
          }
        }
      },
      "ResultPath": "$.Release",
      "Next": "Notify DevOps"
    },
    "Notify DevOps": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-east-1:010285592474:function:sendHttpRequest:$LATEST",
        "Payload": {
          "verb": "POST",
          "path.$": "$.path",
          "data": {
            "action.$": "$$.State.Name",
            "message.$": "States.Format('Deploy the release {} on prod', $.Release.Payload.result.release)",
            "Release.$": "$.Release.Payload.result.release"
          }
        }
      },
      "ResultPath": "$.Release",
      "Next": "Done"
    },
    "Done": {
      "Type": "Succeed"
    },
    "TryAgain": {
      "Type": "Fail"
    }
  }
}